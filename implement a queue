#include <bits/stdc++.h> 
class Queue {

        // Implement the Constructor
        int* arr;
        int qfront;
        int rear;
        int size;
    public:
    Queue() {
        size = 100001;
        arr = new int[size];
        rear = 0;
        qfront = 0;
    }

    

    /*----------------- Public Functions of Queue -----------------*/

    bool isEmpty() {
        // Implement the isEmpty() function
        if(qfront==rear){
            return true;
        }
        else{
           return false;
        }

    }

    void enqueue(int data) {
        // Implement the enqueue() function
        if(rear==size){
            cout<<"queue is full"<<endl;
        }
        else{
            arr[rear]=data;
            rear++;
        }
    }

    int dequeue() {
        // Implement the dequeue() function
        
        if(qfront==rear){
            return -1;
        }
        else{
            int ans = arr[qfront];
            arr[qfront]=-1;
            qfront++;
            return ans;
            if(qfront==rear){
                rear=0;
                qfront=0;
            }
            return ans;
        }
        
    }

    int front() {
        // Implement the front() function
        if(qfront==rear){
            return -1;
        }
        else{
            return arr[qfront];
        }
    }
};
